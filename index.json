[{"content":" 优雅永不过时：PASCAL / pascal / pas ！ 2023年1月21日 00点37分 JP\n🎵秋天不回来 2023年1月16日 20点31分 JP\n","permalink":"/isay/","summary":"心生万象","title":"🫧囚言秋羽"},{"content":"2023年1月15日 12点00分 JP\n标题的使用方式 (Title or Heading) 1~6级标题分别用: 1~6个# 空格 来表示\n代码 # heading 1 ## heading 2 ### heading 3 #### heading 4 ##### heading 5 ###### heading 6 效果 heading 1 heading 2 heading 3 heading 4 heading 5 heading 6 换行以及分段 (Rows and Paragraphs) 换行: 空格 空格 换行\n代码 row1 \u0026lt;!--Here are two spacebar--\u0026gt; row2 效果 row1\nrow2\n分段: 换行 换行用来表示\n代码 paragraph1 paragraph2 效果 paragraph1\nparagraph2\n设置字体属性 (Character Attribute) ~~包住表示删除线\n1~3个*包住分别表示斜体、粗体、粗斜体\n代码 ~~strikeout~~ ~~删除线~~ *italic* *斜体* **bold** **粗体** ***italic \u0026amp; bold*** ***粗斜体*** 效果 strikeout 删除线\nitalic 斜体\nbold 粗体\nitalic \u0026amp; bold 粗斜体\n列表与序号 (List and Order) 无序列表: -空格或 +空格或*空格, 后面可接[空格]空格或者[x]空格来表示复选框\n为了兼容性, 不建议混合使用, 尽管下例如此, 但只是为了演示\n代码 - list 1 + list 2 * list 3 - [ ] 这个列项没有选中 - [x] 这个列项被选中了 效果 list 1 list 2 list 3 这个列项没有选中 这个列项被选中了 有序列表: N.空格, 其中N表示起始序号\n后续数字大小无效,列表将从N开始递增, 详见下方例子\n代码 2. order 2 1. order 3 5. order 4 效果 order 2 order 3 order 4 子列表: 空格 空格 空格 空格 或 TAB\n代码 - list - list - child list - child list - child list - c c list - c c list 1. order 1. child order 2. child order 1. c c order 2. c c order 效果 list list child list child list child list c c list c c list order child order child order c c order c c order 代码与代码块 (Code and Block) 突出强调(代码): 首尾用`包住\n代码 This is the `keyword`. 效果 This is the keyword.\n代码中包含`时, 用``与空格包住, 如是: ``空格代码空格``\n代码 `` Press the `keyword`. `` 效果 Press the `keyword`.\n同理若代码中含有n个`,则需要在代码首尾用n+个反引号与1个空格包住即可\n如下方举例, 代码原文中有两个反引号, 则代码本身需要在首尾用三个或以上(例子中使用了5个)反引号与一个空格来包住\n代码 ````` We have two symbols: ``. ````` 效果 We have two symbols: ``.\n代码块: 首尾各用 ``` 包住\n可在首3个`后面指定代码语言 , 如是: ```language代码块```\n除了反引号也可使用波浪号: ~~~, 详见下方举例\n代码 ``` #include \u0026lt;stdio.h\u0026gt; //hh #define pi 3.1415926 ``` ```C #include \u0026lt;stdio.h\u0026gt; ``` ~~~c++ int main() { return 0; } ~~~ 效果 #include \u0026lt;stdio.h\u0026gt; //hh #define pi 3.1415926 #include \u0026lt;stdio.h\u0026gt; int main() { return 0; } 若代码原文中有3个`或~, 则可用3+个`或~来包住代码块\n代码 `````C char* str=\u0026#34; ``` \u0026#34;; printf(\u0026#34;%s\u0026#34;,str); ````` 效果 char* str=\u0026#34; ``` \u0026#34;; printf(\u0026#34;%s\u0026#34;,str); 除使用反引号与波浪号外, 还可以让整个代码块缩进4个或以上空格\n代码 int a=0, b=0; int c=a+b; printf(\u0026#34;c: %d\u0026#34;, c); 效果 int a=0, b=0; int c=a+b; printf(\u0026quot;c: %d\u0026quot;, c); 引用 (Quotes) 每行行首添加 \u0026gt;空格, 多层引用则增加\u0026gt;数, 见下例\n为了兼容性, 建议在引用前后各增加一行空白行\n代码 content... \u0026gt; quote 1 \u0026gt; quote 2 \u0026gt; \u0026gt; another quote 1 \u0026gt; another quote 2 \u0026gt;\u0026gt; child quote 1 \u0026gt;\u0026gt;\u0026gt; c c quote 1 content... 效果 (请忽略第一个引用, 此为本文引用) content\u0026hellip;\nquote 1 quote 2\nanother quote 1 another quote 2\nchild quote 1\nc c quote 1\ncontent\u0026hellip;\n分割线 (Segmentation Line) --- 或 ___ 或 ***, 三个或以上\n为了兼容性, 建议在前后添加空白行\n代码 content1... --- content2... 效果 content1\u0026hellip;\ncontent2\u0026hellip;\n超链接 (Links) 标准显示方式: []包住链接文本, 其后()包住链接地址, 地址后方添加空格然后用\u0026quot;\u0026quot;包住可选提示\n如是: [显示文本](链接地址 \u0026quot;可选提示\u0026quot;)\n代码 [我是一个链接](www.xxxxxx.com) [谷歌](www.google.com \u0026#34;当你鼠标指向这个链接时, 我会显示这条提示\u0026#34;) [AKIBA BLOG](syakiba.github.io \u0026#34;前往AKIBA的个人博客\u0026#34;) 效果 我是一个链接\n谷歌\nAKIBA BLOG\n直接显示链接地址时,可以使用\u0026lt;\u0026gt;包住\n代码 \u0026lt;www.google.com\u0026gt; *注意此方式需要http前缀,请见下方效果* \u0026lt;https://www.google.com\u0026gt; \u0026lt;xxxxx@gmail.com\u0026gt; 效果 \u0026lt;www.google.com\u0026gt; 注意此方式需要http前缀,请见下方效果\nhttps://www.google.com\nxxxxx@gmail.com\n引用链接分两个部分, 引用标识和引用内容\n引用标识: [显示文本] 空格 [引用标识]\n引用内容: [引用标识]:空格 链接地址 空格\u0026quot;可选提示\u0026quot; (可选提示可以用单引号、双引号、括号包住; 链接地址可以用尖括号包住也可以直接写)\n不建议使用, 作者编写本文时, 此方式一直失败\n代码 [谷歌搜索] [0] [AKIBA BLOG] [a] (other content) [0]: \u0026lt;https://www.google.com\u0026gt; [a]: syakiba.github.io \u0026#34;前往AKIBA的个人博客\u0026#34; 效果 [谷歌搜索] [0]\n[AKIBA BLOG] [a]\n(other content\u0026hellip;)\n[0]: https://www.google.com\n[a]: syakiba.github.io \u0026ldquo;前往AKIBA的个人博客\u0026rdquo;\n图片 (Pictures) 形式几乎与上述标准链接方式一样,在其前方加一个!即可\n如是: ![替换文本](图片地址 \u0026quot;可选提示\u0026quot;)\n代码 ![图片未显示时你会看到我](xxx/xxx/xxx \u0026#34;这是一个失败的图片\u0026#34;) ![谷歌LOGO](https://t12.baidu.com/it/u=4082721491,3981845853\u0026amp;fm=58 \u0026#34;看到我时,你的鼠标正在这个图片上\u0026#34;) ![百度搜索](https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png) 效果 表格 须要两行来标识表格: 一行表头,一行分隔符\n|用来表示表格列数, 第二行须要3个或以上-来标识表格且列数要与表头一样\n-的左右可以加上:用来表示左右对齐(或居中), 如是: :- :-: -:\n代码 |地址|数据|类型| |-|-|-| |0x0001|FFFF|STR| |0x0001|FFFF|STR| |0x0001|FFFF|STR| |姓名|性别|性取向| |:-|:-----------------------:|--:| |张三|男|男| |李四|中|中| |桃五六七|女|外星生物| 效果 地址 数据 类型 0x0001 FFFF STR 0x0001 FFFF STR 0x0001 FFFF STR 姓名 性别 性取向 张三 男 男 李四 变性者 双性恋 桃五六七 女 外星生物 脚注 两个部分组成, 脚注标识与脚注内容, 脚注内容为当前脚注标识与下一个脚注标识之前的文本\n脚注标识: [^标识]\n脚注内容: [^标识]: 空格 脚注内容\n不建议使用, 为了兼容性建议脚注内容后面分段\n代码 脚注标识[^1]可以是字母或数字, 使用脚注[^2]功能前需确认当前处理器是否支持, 因为不是所有的markdown处理器[^3]都支持此功能. other content... [^1]: 用来标识当前位置有一条注解, 点击可以跳转的注解. other content... over. [^2]: 脚注功能不是所有处理器都支持, 语法规定脚注内容可以放在除list、quote、block外的任意地方 脚注内容遇到分段会终止(就如前方[^1]那样), 此外脚注内容遇到下一个脚注内容时也会终止正如此条脚注内容所示 [^3]: 我用来终止[^2]的内容, 因此我就不解释什么是markdown处理器了, 因为这是我乱说的词汇. 效果 脚注标识1可以是字母或数字, 使用脚注2功能前需确认当前处理器是否支持, 因为不是所有的markdown处理器3都支持此功能.\nother content\u0026hellip;\nother content\u0026hellip;\nover.\n表情的使用 (Emoji) 一是直接粘贴, 多数处理器会自动将其以markdown文本显示 (表情复制)\n二是使用简码, 如是:name:, 部分处理器支持使用表情简码 (简码查询)\n代码 😄 😆 💤 效果 😄 😆 💤\n文献: https://www.markdownguide.org/basic-syntax/\n2023年1月15日 22点03分 JP\n用来标识当前位置有一条注解, 点击可以跳转到注解.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n脚注功能不是所有处理器都支持, 语法规定脚注内容可以放在除list、quote、block外的任意地方\n脚注内容遇到分段会终止(就如前方[^1]所示那样), 此外脚注内容遇到下一个脚注内容时也会终止正如此条脚注内容所示\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n我用来终止[^2]的内容, 因此我就不解释什么是markdown处理器了, 因为这是我随便说的词汇.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"/posts/markdown_grammar/","summary":"markdown语法之介绍、演示、使用方式、参考","title":"MARKDOWN入门到精通"}]